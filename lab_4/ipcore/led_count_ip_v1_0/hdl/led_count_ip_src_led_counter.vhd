-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\d57w762\Desktop\lab4\hdlsrc\hdlcoder_led_blinking_4bit\led_count_ip_src_led_counter.vhd
-- Created: 2017-03-07 12:53:47
-- 
-- Generated by MATLAB 9.0 and HDL Coder 3.8
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.001
-- Target subsystem base rate: 0.001
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        0.001
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- LED                           ce_out        0.001
-- Read_back                     ce_out        0.001
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: led_count_ip_src_led_counter
-- Source Path: hdlcoder_led_blinking_4bit/led_counter
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.led_count_ip_src_led_counter_pkg.ALL;

ENTITY led_count_ip_src_led_counter IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        Blink_frequency                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        Blink_direction                   :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        LED                               :   OUT   std_logic_vector(3 DOWNTO 0);  -- ufix4
        Read_back                         :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
        );
END led_count_ip_src_led_counter;


ARCHITECTURE rtl OF led_count_ip_src_led_counter IS

  -- Constants
  CONSTANT nc                             : vector_of_unsigned24(0 TO 15) := 
    (to_unsigned(16#800000#, 24), to_unsigned(16#400000#, 24), to_unsigned(16#200000#, 24),
     to_unsigned(16#100000#, 24), to_unsigned(16#080000#, 24), to_unsigned(16#040000#, 24),
     to_unsigned(16#020000#, 24), to_unsigned(16#010000#, 24), to_unsigned(16#008000#, 24),
     to_unsigned(16#004000#, 24), to_unsigned(16#002000#, 24), to_unsigned(16#001000#, 24),
     to_unsigned(16#000800#, 24), to_unsigned(16#000400#, 24), to_unsigned(16#000200#, 24),
     to_unsigned(16#000100#, 24));  -- ufix24 [16]

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL Blink_frequency_unsigned         : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL alpha1_D_Lookup_Table_k          : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL alpha1_D_Lookup_Table_out1       : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL Relational_Operator_relop1       : std_logic;
  SIGNAL HDL_Counter1_out1                : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL Relational_Operator_out1         : std_logic;
  SIGNAL HDL_Counter_count                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL HDL_Counter_count_next           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL HDL_Counter_count_step           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL HDL_Counter_out1                 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice_out1                   : unsigned(3 DOWNTO 0);  -- ufix4

BEGIN
  -- Output only the 4 MSB of the counter

  enb <= clk_enable;

  Blink_frequency_unsigned <= unsigned(Blink_frequency);

  -- <S3>/1-D Lookup Table
  
  alpha1_D_Lookup_Table_k <= to_unsigned(16#0#, 4) WHEN Blink_frequency_unsigned = to_unsigned(16#0#, 4) ELSE
      to_unsigned(16#F#, 4) WHEN Blink_frequency_unsigned = to_unsigned(16#F#, 4) ELSE
      Blink_frequency_unsigned;
  alpha1_D_Lookup_Table_out1 <= nc(to_integer(alpha1_D_Lookup_Table_k));

  -- Free running, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  -- 
  -- <S3>/HDL Counter1
  HDL_Counter1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        HDL_Counter1_out1 <= to_unsigned(16#000000#, 24);
      ELSIF enb = '1' THEN
        IF Relational_Operator_relop1 = '1' THEN 
          HDL_Counter1_out1 <= to_unsigned(16#000000#, 24);
        ELSE 
          HDL_Counter1_out1 <= HDL_Counter1_out1 + to_unsigned(16#000001#, 24);
        END IF;
      END IF;
    END IF;
  END PROCESS HDL_Counter1_process;


  -- <S3>/Relational Operator
  
  Relational_Operator_relop1 <= '1' WHEN HDL_Counter1_out1 = alpha1_D_Lookup_Table_out1 ELSE
      '0';

  Relational_Operator_out1 <= Relational_Operator_relop1;

  -- Free running, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  -- 
  -- <S3>/HDL Counter
  HDL_Counter_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        HDL_Counter_count <= to_unsigned(16#00#, 8);
      ELSIF enb = '1' AND Relational_Operator_out1 = '1' THEN
        HDL_Counter_count <= HDL_Counter_count_next;
      END IF;
    END IF;
  END PROCESS HDL_Counter_process;

  HDL_Counter_out1 <= HDL_Counter_count;
  
  HDL_Counter_count_step <= to_unsigned(16#01#, 8) WHEN Blink_direction = '1' ELSE
      to_unsigned(16#FF#, 8);
  HDL_Counter_count_next <= HDL_Counter_count + HDL_Counter_count_step;

  -- <S3>/Bit Slice
  Bit_Slice_out1 <= HDL_Counter_out1(7 DOWNTO 4);

  LED <= std_logic_vector(Bit_Slice_out1);

  Read_back <= std_logic_vector(HDL_Counter_out1);

  ce_out <= clk_enable;

END rtl;

